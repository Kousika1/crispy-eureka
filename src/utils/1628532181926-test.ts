import {MigrationInterface, QueryRunner} from "typeorm";

export class test1628532181926 implements MigrationInterface {
    name = 'test1628532181926'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query("CREATE TABLE `ad_campaigns` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `name` varchar(255) NULL, `active` tinyint NULL, `archived` tinyint NULL, `start_date` timestamp NULL, `end_date` timestamp NULL, `content` tinyint NULL, `cpm` decimal NULL, `budget` decimal NULL, `uuid` varchar(255) NULL, `goal` int NULL DEFAULT 0, `cpc` decimal NULL, UNIQUE INDEX `ad_campaigns_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `ad_clicks` (`id` bigint NOT NULL AUTO_INCREMENT, `ad_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `price` decimal NULL, UNIQUE INDEX `ad_clicks_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `ad_credits` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `amount` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `ad_credits_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `adds` (`id` bigint NOT NULL AUTO_INCREMENT, `report` varchar(255) NULL, `category` int NULL, `post_id` int NULL, `text` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `adds_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `ad_impressions` (`id` bigint NOT NULL AUTO_INCREMENT, `ad_id` int NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `price` decimal NULL, UNIQUE INDEX `ad_impressions_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `admin_alerts` (`id` bigint NOT NULL AUTO_INCREMENT, `message` text NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `admin_alerts_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `ad_placements` (`id` bigint NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, UNIQUE INDEX `ad_placements_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `ads` (`id` bigint NOT NULL AUTO_INCREMENT, `campaign_id` int NULL, `html_code` text NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `archived` tinyint NULL DEFAULT false, `active` tinyint NULL DEFAULT false, `name` varchar(255) NULL, `ad_format` int NULL DEFAULT 0, `vast_url` varchar(255) NULL, `uuid` varchar(255) NULL, `title` varchar(255) NULL, `text` varchar(255) NULL, `url` text NULL, `post_id` int NULL, UNIQUE INDEX `ads_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `ar_internal_metadata` (`key` varchar(255) NOT NULL, `value` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `ar_internal_metadata_pkey` (`key`), PRIMARY KEY (`key`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `authenticated_accounts` (`id` bigint NOT NULL AUTO_INCREMENT, `provider` int NULL, `api_key` varchar(255) NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `token` varchar(255) NULL, `access_token` varchar(255) NULL, `access_token_secret` varchar(255) NULL, UNIQUE INDEX `authenticated_accounts_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `average_transaction_fees` (`id` bigint NOT NULL AUTO_INCREMENT, `sat_byte` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `average_transaction_fees_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `bitcoin_address_backups` (`id` bigint NOT NULL AUTO_INCREMENT, `bitcoin_address_id` int NULL, `private_key` varchar(255) NULL, `salt` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `wif` varchar(255) NULL, UNIQUE INDEX `bitcoin_address_backups_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `bitcoin_addresses` (`id` bigint NOT NULL AUTO_INCREMENT, `address` varchar(255) NULL, `private_key` varchar(255) NULL, `public_key` varchar(255) NULL, `wif` varchar(255) NULL, `salt` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `user_id` int NULL, `disabled` tinyint NULL DEFAULT false, `password_lost` tinyint NULL DEFAULT false, UNIQUE INDEX `bitcoin_addresses_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `bitcoin_purchases` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `amount` int NULL, `wyre_transaction_id` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `bitcoin_purchases_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `bitcoin_wallets` (`id` bigint NOT NULL AUTO_INCREMENT, `private_key` varchar(255) NULL, `public_key` varchar(255) NULL, `address` varchar(255) NULL, `wif` varchar(255) NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `salt` varchar(255) NULL, UNIQUE INDEX `bitcoin_wallets_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `blocks` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `blocked_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `blocks_pkey` (`id`), INDEX `index_blocks_on_user_id_and_blocked_id` (`blocked_id`, `user_id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `boards` (`id` bigint NOT NULL AUTO_INCREMENT, `display_name` varchar(255) NULL, `url_name` varchar(255) NULL, `description` text NULL, `stealth` tinyint NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `boards_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `channels` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `channels_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `comments` (`id` bigint NOT NULL AUTO_INCREMENT, `post_id` int NULL, `score` int NULL, `content` json NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `user_id` int NULL, `uuid` varchar(255) NULL, `comment_id` int NULL, `edited` tinyint NULL DEFAULT false, UNIQUE INDEX `comments_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `contacts` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `fb_friendship_timestamp` int NULL, `name` varchar(255) NULL, `match` tinyint NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `contacts_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `conversations` (`id` bigint NOT NULL AUTO_INCREMENT, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, `messages_count` int NULL, `owner_id` int NULL, `encrypted` tinyint NULL, `powerchat` tinyint NULL DEFAULT false, `group` tinyint NULL DEFAULT false, `group_name` varchar(255) NULL, `last_message_id` int NULL, `last_message_date` timestamp NULL, `messages_counter_cache` int NULL, `livestream_user_id` int NULL, `private_conversation` tinyint NULL, `public_conversation` tinyint NULL, INDEX `index_conversations_on_uuid` (`uuid`), UNIQUE INDEX `conversations_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `conversation_users` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `conversation_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `muted` tinyint NULL, `deprecated` tinyint NULL DEFAULT false, `isread` tinyint NULL DEFAULT true, INDEX `index_conversation_users_on_user_id` (`user_id`), UNIQUE INDEX `conversation_users_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `deleted_user_backups` (`id` bigint NOT NULL AUTO_INCREMENT, `private_key` varchar(255) NULL, `public_key` varchar(255) NULL, `wif` varchar(255) NULL, `address` varchar(255) NULL, `name` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `deleted_user_backups_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `delivery_addresses` (`id` bigint NOT NULL AUTO_INCREMENT, `address` varchar(255) NULL, `currency` varchar(255) NULL, `active` tinyint NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `delivery_addresses_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `events` (`id` bigint NOT NULL AUTO_INCREMENT, `channel_id` int NULL, `user_id` int NULL, `tag` varchar(255) NULL, `content` json NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `events_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `facebook_imports` (`id` bigint NOT NULL AUTO_INCREMENT, `started_at` timestamp NULL, `url` varchar(255) NULL, `user_id` int NULL, `success` tinyint NULL, `debug_info` json NULL, `error` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `total_imported_posts` int NULL, UNIQUE INDEX `facebook_imports_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `messages` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `text` longtext NULL, `link` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `read` tinyint NULL DEFAULT false, `to` int NULL, `from` int NULL, `uuid` varchar(255) NULL, `amount` decimal NULL, `conversation_id` int NULL, `from_public_key` varchar(255) NULL, `to_public_key` varchar(255) NULL, `amount_sat` int NULL, `from_id` text NULL, INDEX `index_messages_on_read` (`read`), UNIQUE INDEX `messages_pkey` (`id`), INDEX `index_messages_on_conversation_id` (`conversation_id`), INDEX `index_messages_on_read_and_conversation_id` (`conversation_id`, `read`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `files` (`id` int NOT NULL AUTO_INCREMENT, `file_name` varchar(255) NULL, `url` varchar(1000) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `message_id` bigint NULL, UNIQUE INDEX `files_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `filters` (`id` bigint NOT NULL AUTO_INCREMENT, `word` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `filters_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `hidden_hashtags` (`id` bigint NOT NULL AUTO_INCREMENT, `text` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `hidden_hashtags_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `invites` (`id` bigint NOT NULL AUTO_INCREMENT, `code` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `invites_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `invoices` (`id` bigint NOT NULL AUTO_INCREMENT, `amount_fiat` decimal NULL, `amount` double NULL, `currency` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `payment_address_id` int NULL, `paid` tinyint NULL, `user_id` int NULL, `powerchat_message` text NULL, UNIQUE INDEX `invoices_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `irrelevant_words` (`id` bigint NOT NULL AUTO_INCREMENT, `text` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `irrelevant_words_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `likes` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `post_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, INDEX `index_likes_on_post_id` (`post_id`), UNIQUE INDEX `likes_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `list_blocks` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `list_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `list_blocks_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `list_memberships` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `list_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `list_memberships_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `lists` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `name` varchar(255) NULL, `uuid` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `public` tinyint NULL, `show_in_feed` tinyint NULL, `description` longtext NULL, UNIQUE INDEX `lists_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `list_subscriptions` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `list_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `list_subscriptions_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `livestreams` (`id` bigint NOT NULL AUTO_INCREMENT, `uuid` varchar(255) NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `unavailable` tinyint NULL, `screenshot_time` timestamp NULL, `ended` tinyint NULL, `started` tinyint NULL, `title` longtext NULL, `description` longtext NULL, `conversation_uuid` varchar(255) NULL, `started_at` timestamp NULL, `screenshot_url` varchar(255) NULL, `screenshot_retries` int NULL DEFAULT 0, `followers_only` tinyint NULL DEFAULT false, `list_id` int NULL, `url_key` varchar(255) NULL, `permissions` int NULL, `ended_at` timestamp NULL, `last_online_check` timestamp NULL, `transcoded_cache` tinyint NULL DEFAULT false, `transcoding_finished_at` timestamp NULL, `estimated_transcoding_time` int NULL, UNIQUE INDEX `livestreams_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `livestream_viewers` (`id` bigint NOT NULL AUTO_INCREMENT, `ip_address` varchar(255) NULL, `last_ping` timestamp NULL, `channel_user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `livestream_id` int NULL, UNIQUE INDEX `livestream_viewers_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `media_thumbnails` (`id` bigint NOT NULL AUTO_INCREMENT, `md5` varchar(255) NULL, `user_id` int NULL, `url` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `extension` varchar(255) NULL, `cdn_key` varchar(255) NULL, UNIQUE INDEX `media_thumbnails_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `message_uploads` (`id` bigint NOT NULL AUTO_INCREMENT, `message_id` int NULL, `upload_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `message_uploads_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `metrics` (`id` bigint NOT NULL AUTO_INCREMENT, `key` varchar(255) NULL, `value` double NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `metrics_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `notifications` (`id` bigint NOT NULL AUTO_INCREMENT, `text` varchar(255) NULL, `link` varchar(255) NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `read` tinyint NULL, `related_user` int NULL, `tag` varchar(255) NULL, `post_id` int NULL, `uuid` varchar(255) NULL, INDEX `index_notifications_on_user_id` (`user_id`), UNIQUE INDEX `notifications_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `old_sender_keys` (`id` bigint NOT NULL AUTO_INCREMENT, `salt` varchar(255) NULL, `encrypted_key` varchar(255) NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `old_sender_keys_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `payment_addresses` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `creator_id` int NULL, `priv` varchar(255) NULL, `pub` varchar(255) NULL, `addr` varchar(255) NULL, `wif` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `delivery_address` varchar(255) NULL, `currency` varchar(255) NULL, `key` varchar(255) NULL, `funded` tinyint NULL DEFAULT false, `usd_amount` int NULL, `crypto_amount` double NULL, `invoice_id` int NULL, `sent` tinyint NULL DEFAULT false, `forward_tx_hash` varchar(255) NULL, UNIQUE INDEX `payment_addresses_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `payments` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `transaction_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `payments_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `post_boosts` (`id` bigint NOT NULL AUTO_INCREMENT, `post_id` int NULL, `impressions` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `post_boosts_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `posts` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `content` json NULL, `post_type` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, `edited` tinyint NULL DEFAULT false, `post_id` int NULL, `tier` int NULL DEFAULT 0, `dead` tinyint NULL DEFAULT false, `reports_count` int NULL, `likes_count` int NULL, `thread_id` varchar(255) NULL, `bitbacker_id` int NULL, `quoted_post_id` int NULL, `board_id` int NULL, `score_cache` int NULL DEFAULT 0, `deleted` tinyint NULL, `text` text NULL, `contains_image` tinyint NULL, `contains_media` tinyint NULL, `contains_audio` tinyint NULL, `contains_video` tinyint NULL, `uploads_counter_cache` int NULL, `repost_counter_cache` int NULL, `like_counter_cache` int NULL, `url_metadata_cache` json NULL, `views_counter_cache` int NULL DEFAULT 0, `replies_counter_cache` int NULL, `likes_counter_cache` int NULL, `migrated_to_bucket_cache` tinyint NULL DEFAULT false, `nsfw_score` decimal NULL, `featured_in_frontpage` tinyint NULL DEFAULT false, `fb_timestamp` int NULL, `fb_hash` varchar(255) NULL, `repost_id` int NULL, INDEX `index_posts_on_uuid` (`uuid`), INDEX `index_posts_on_user_id` (`user_id`), INDEX `index_posts_on_repost_id` (`repost_id`), INDEX `index_posts_on_post_id` (`post_id`), UNIQUE INDEX `posts_pkey` (`id`), INDEX `index_posts_on_featured_in_frontpage` (`featured_in_frontpage`), INDEX `index_posts_on_dead` (`dead`), INDEX `index_posts_on_created_at` (`created_at`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `post_uploads` (`id` bigint NOT NULL AUTO_INCREMENT, `post_id` int NULL, `upload_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `order` int NULL, `post_order` int NULL, UNIQUE INDEX `post_uploads_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `product_inventories` (`id` bigint NOT NULL AUTO_INCREMENT, `product_id` int NULL, `purchase_order_id` int NULL, `uuid` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `product_inventories_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `products` (`id` bigint NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `description` text NULL, `user_id` int NULL, `price` decimal(8,2) NOT NULL, `enabled` tinyint NULL, `quantity` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, `file` json NULL, `dead` tinyint NULL DEFAULT false, `image` json NULL, `kind` int NULL DEFAULT 0, `ships_from` varchar(255) NULL, `stock` int NULL, `images` json NULL, `stock_left_cache` int NULL, `seller_score_cache` int NULL DEFAULT 0, `sales_counter_cache` int NULL, UNIQUE INDEX `products_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `product_uploads` (`id` bigint NOT NULL AUTO_INCREMENT, `product_id` int NULL, `upload_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `product_uploads_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `purchase_orders` (`id` bigint NOT NULL AUTO_INCREMENT, `product_id` int NULL, `price` int NULL, `price_sat` bigint NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, `user_id` int NULL, `paid` tinyint NULL DEFAULT false, `tx_hash` varchar(255) NULL, `purchase_id` int NULL, `ad_credit_id` int NULL, `ad_credit` int NULL, `support_id` int NULL, `address` varchar(255) NULL, `country` varchar(255) NULL, `zipcode` int NULL, `state` varchar(255) NULL, `shipping_rate_price_sat` int NULL, `shipping_rate_price` decimal NULL, `seller_id` int NULL, `gift_for_user_id` int NULL, `refunded` tinyint NULL DEFAULT false, `fee_sat` int NULL, `support_user_name` varchar(255) NULL, `support_amount` int NULL, `support_user_id` int NULL, `street_name` varchar(255) NULL, `building_number` varchar(255) NULL, `tx_skeleton` json NULL, `shipped` tinyint NULL, `shipped_at` timestamp NULL, `shipping_information` text NULL, `shipment_status` int NULL DEFAULT 0, `deliver_to_name` varchar(255) NULL, `delivery_notes` text NULL, `cancelled` tinyint NULL DEFAULT false, `address_2` varchar(255) NULL, `region` varchar(255) NULL, `city` varchar(255) NULL, `address_1` varchar(255) NULL, `shipping_note` text NULL, UNIQUE INDEX `purchase_orders_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `purchase_order_supports` (`id` bigint NOT NULL AUTO_INCREMENT, `purchase_order_id` int NULL, `support_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `purchase_order_supports_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `purchases` (`id` bigint NOT NULL AUTO_INCREMENT, `product_id` int NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, `purchase_order_id` int NULL, `ad_credit_id` int NULL, UNIQUE INDEX `purchases_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `reports` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `post_id` int NULL, `category` int NULL, `text` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `reports_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `reposts` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `post_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `post_user_disabled_cache` tinyint NULL, `post_dead_cache` tinyint NULL, INDEX `index_reposts_on_user_id` (`user_id`), UNIQUE INDEX `reposts_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `rulings` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `post_id` int NULL, `comment` text NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `rulings_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `schema_migrations` (`version` varchar(255) NOT NULL, UNIQUE INDEX `schema_migrations_pkey` (`version`), PRIMARY KEY (`version`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `sender_keys` (`id` bigint NOT NULL AUTO_INCREMENT, `encrypted_key` varchar(255) NULL, `channel_id` int NULL, `sender_id` int NULL, `receiver_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `conversation_id` int NULL, `user_id` int NULL, `encrypted_private_key` text NULL, UNIQUE INDEX `sender_keys_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `shipping_rates` (`id` bigint NOT NULL AUTO_INCREMENT, `product_id` int NULL, `country` varchar(255) NULL, `price` decimal NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, UNIQUE INDEX `shipping_rates_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `subscription_requests` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `creator_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `uuid` varchar(255) NULL, UNIQUE INDEX `subscription_requests_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `subscriptions` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `creator_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `timelock` timestamp NULL, `amount` decimal NULL, `last_paid` timestamp NULL, `uuid` varchar(255) NULL, `auto_renew` tinyint NULL, INDEX `index_subscriptions_on_user_id` (`user_id`), UNIQUE INDEX `subscriptions_pkey` (`id`), INDEX `index_subscriptions_on_creator_id` (`creator_id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `support_payments` (`id` bigint NOT NULL AUTO_INCREMENT, `support_id` int NULL, `successful` tinyint NULL, `error` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `amount` int NULL, `tx_hash` varchar(255) NULL, UNIQUE INDEX `support_payments_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `supports` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `creator_id` int NULL, `amount` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `timelock` timestamp NULL, `failed_payments` int NULL DEFAULT 0, `last_paid` timestamp NULL, `cancelled` tinyint NULL DEFAULT false, `uuid` varchar(255) NULL, `deleted` tinyint NULL DEFAULT false, UNIQUE INDEX `supports_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `tiers` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `amount` decimal NULL, `name` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `description` longtext NULL, `title` longtext NULL, `currency` varchar(255) NULL, `bitbacker_id` int NULL, `uuid` varchar(255) NULL, UNIQUE INDEX `tiers_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `token_credits` (`id` bigint NOT NULL AUTO_INCREMENT, `amount` int NULL, `user_id` int NULL, `campaign_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `token_credits_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `transaction_inputs` (`id` bigint NOT NULL AUTO_INCREMENT, `address` varchar(255) NULL, `value` decimal NULL, `transaction_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `amount_sat` bigint NULL, UNIQUE INDEX `transaction_inputs_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `transaction_outputs` (`id` bigint NOT NULL AUTO_INCREMENT, `address` varchar(255) NULL, `value` decimal NULL, `transaction_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `amount_sat` bigint NULL, INDEX `index_transaction_outputs_on_transaction_id` (`transaction_id`), UNIQUE INDEX `transaction_outputs_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `transactions` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `tx_hash` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `confirmed` tinyint NULL DEFAULT false, `subscription_id` int NULL, `to` varchar(255) NULL, `from` varchar(255) NULL, `amount` decimal NULL, `amount_usd` decimal NULL, `message` varchar(255) NULL, `post_id` int NULL, `received` timestamp NULL, `fee` decimal NULL, `wyre_id` varchar(255) NULL, `transmitted_at` timestamp NULL, `from_user_id` int NULL, `to_user_id` int NULL, `amount_fiat` decimal NULL, `amount_sat` int NULL, `notified` tinyint NULL DEFAULT false, `failed` tinyint NULL DEFAULT false, `confirmed_at` timestamp NULL, `last_updated_on` timestamp NULL, `external` tinyint NULL, `inputs` json NULL, `outputs` json NULL, `fee_sat` int NULL, `btc_price` decimal NULL, INDEX `index_transactions_on_tx_hash` (`tx_hash`), INDEX `index_transactions_on_to` (`to`), UNIQUE INDEX `transactions_pkey` (`id`), INDEX `index_transactions_on_from` (`from`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `unfollows` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `unfollowed_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `unfollows_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `uploads` (`id` bigint NOT NULL AUTO_INCREMENT, `md5` varchar(255) NULL, `mime_type` varchar(255) NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `optimization_start` timestamp NULL, `optimization_end` timestamp NULL, `width` int NULL, `height` int NULL, `optimized_md5` varchar(255) NULL, `thumbnail_md5` varchar(255) NULL, `width_cache` int NULL, `height_cache` int NULL, `available_in_cdn` tinyint NULL DEFAULT false, `migration_failed` tinyint NULL DEFAULT false, `cdn_md5` varchar(255) NULL, `cdn_extension` varchar(255) NULL, `blurhash_cache` longtext NULL, `optimized_url_cache` varchar(255) NULL, `optimized_cache` tinyint NULL, `cdn_key` varchar(255) NULL, `cdn_info_cache` json NULL, `sha256` varchar(255) NULL, `duration` double NULL, `space` tinyint NULL DEFAULT false, `content_length_cache` bigint NULL, `estimated_transcoding_time` int NULL, `filename` varchar(255) NULL, UNIQUE INDEX `uploads_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `url_metadata` (`id` bigint NOT NULL AUTO_INCREMENT, `url` longtext NULL, `metadata` json NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `url_metadata_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `user_logs` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `content` json NULL, UNIQUE INDEX `user_logs_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `users` (`id` bigint NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `email` varchar(255) NULL, `password_digest` varchar(255) NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `api_key` varchar(255) NULL, `private_key` varchar(255) NULL, `public_key` varchar(255) NULL, `address` varchar(255) NULL, `wif` varchar(255) NULL, `bio` longtext NULL, `featured` tinyint NULL DEFAULT false, `creator` tinyint NULL DEFAULT false, `preferences` json NULL, `avatar_url` varchar(255) NULL, `display_name` varchar(255) NULL, `background_url` varchar(255) NULL, `header_url` varchar(255) NULL, `wallpaper_url` varchar(255) NULL, `password_reset_code` varchar(255) NULL, `webpush_subscription` json NULL, `currency` varchar(255) NULL, `stream_key` varchar(255) NULL, `message_private_key` varchar(255) NULL, `uuid` varchar(255) NULL, `wallet_scanned_at` timestamp NULL, `notifications_enabled` tinyint NULL, `judge` tinyint NULL DEFAULT false, `super` tinyint NULL DEFAULT false, `dms_open` tinyint NULL DEFAULT false, `display_income` tinyint NULL DEFAULT false, `supporting_enabled` tinyint NULL DEFAULT false, `posts_count` int NULL, `reposts_count` int NULL, `location` varchar(255) NULL, `website` varchar(255) NULL, `stealth` tinyint NULL DEFAULT false, `my_donation_urls` json NULL, `my_social_urls` json NULL, `show_initial_recommendations` tinyint NULL DEFAULT true, `message_public_key` varchar(255) NULL, `last_seen` timestamp NULL, `disabled` tinyint NULL DEFAULT false, `livestream_permissions` int NULL, `livestream_list_id` int NULL, `livestream_title` varchar(255) NULL, `livestream_description` longtext NULL, `livestream_conversation_id` int NULL, `livestream_live` tinyint NULL DEFAULT false, `livestream_url_key` varchar(255) NULL, `livestream_screenshot_url` varchar(255) NULL, `livestream_screenshot_retries` int NULL DEFAULT 0, `balance_cache` bigint NULL DEFAULT 0, `firebase_registration_id` varchar(255) NULL, `wyre_account_id` varchar(255) NULL, `cell_phone_number` varchar(255) NULL, `legal_name` varchar(255) NULL, `wallet_imported` timestamp NULL, `monetization_enabled` tinyint NULL DEFAULT false, `last_scanned_wallet` timestamp NULL, `websockets_channel` varchar(255) NULL, `is_partner` tinyint NULL DEFAULT false, `tx_hook_id` varchar(255) NULL, `score_cache` int NULL, `unconfirmed_balance_cache` int NULL DEFAULT 0, `final_balance_cache` int NULL DEFAULT 0, `hide_locked_posts` tinyint NULL DEFAULT false, `avatar_md5` varchar(255) NULL, `avatar_file` varchar(255) NULL, `avatar_uuid` varchar(255) NULL, `transactions_counter_cache` int NULL, `ios_push_token` varchar(255) NULL, `android_push_token` varchar(255) NULL, `unread_notifications_counter_cache` int NULL, `beta_tester` tinyint NULL DEFAULT false, `block_counter_cache` int NULL, `notifications_counter_cache` int NULL, `posts_counter_cache` int NULL, `unread_messages_counter_cache` int NULL, `reposts_counter_cache` int NULL, `last_indexed` timestamp NULL, `avatar_extension` varchar(255) NULL, `subscriptions_counter_cache` int NULL, `subscribers_counter_cache` int NULL, `support_goal` int NULL, `supports_counter_cache` int NULL, `sender_key_encryption_seed` varchar(255) NULL, `sender_key_encryption_salt` varchar(255) NULL, `last_post_date` timestamp NULL, `seller_score_cache` int NULL DEFAULT 0, `show_nsfw_posts` tinyint NULL DEFAULT false, `blur_nsfw` tinyint NULL DEFAULT true, `old_avatar_url` varchar(255) NULL, `admin_nsfw` tinyint NULL DEFAULT false, `uploads_enabled` tinyint NULL DEFAULT true, `storage_used_cache` bigint NULL, `plus_manually_enabled` tinyint NULL DEFAULT false, `google_secret` varchar(255) NULL, `mfa_secret` varchar(255) NULL, `wallet_salt` varchar(255) NULL, `wallet_cache` json NULL, `manually_enabled_pro` tinyint NULL DEFAULT false, `user_nsfw` tinyint NULL DEFAULT false, `failed_login_attempts` int NULL DEFAULT 0, `segwit_enabled` tinyint NULL DEFAULT false, `import_data_url` varchar(255) NULL, `filtered_word_list` text NULL, `platform_information` varchar(255) NULL, INDEX `index_users_on_name` (`name`), UNIQUE INDEX `users_pkey` (`id`), INDEX `index_users_on_api_key` (`api_key`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `views` (`id` bigint NOT NULL AUTO_INCREMENT, `upload_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `session_id` varchar(255) NULL, `livestream_id` int NULL, `last_ping` timestamp NULL, `post_id` int NULL, UNIQUE INDEX `views_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `votes` (`id` bigint NOT NULL AUTO_INCREMENT, `up` tinyint NULL, `post_id` int NULL, `user_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `votes_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("CREATE TABLE `wyre_transactions` (`id` bigint NOT NULL AUTO_INCREMENT, `user_id` int NULL, `confirmed` tinyint NULL DEFAULT false, `wyre_id` varchar(255) NULL, `support_id` int NULL, `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, UNIQUE INDEX `wyre_transactions_pkey` (`id`), PRIMARY KEY (`id`)) ENGINE=InnoDB");
        await queryRunner.query("ALTER TABLE `files` ADD CONSTRAINT `FK_63ee0a7c78bd7a1968a0893edab` FOREIGN KEY (`message_id`) REFERENCES `messages`(`id`) ON DELETE SET NULL ON UPDATE CASCADE");
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query("ALTER TABLE `files` DROP FOREIGN KEY `FK_63ee0a7c78bd7a1968a0893edab`");
        await queryRunner.query("DROP INDEX `wyre_transactions_pkey` ON `wyre_transactions`");
        await queryRunner.query("DROP TABLE `wyre_transactions`");
        await queryRunner.query("DROP INDEX `votes_pkey` ON `votes`");
        await queryRunner.query("DROP TABLE `votes`");
        await queryRunner.query("DROP INDEX `views_pkey` ON `views`");
        await queryRunner.query("DROP TABLE `views`");
        await queryRunner.query("DROP INDEX `index_users_on_api_key` ON `users`");
        await queryRunner.query("DROP INDEX `users_pkey` ON `users`");
        await queryRunner.query("DROP INDEX `index_users_on_name` ON `users`");
        await queryRunner.query("DROP TABLE `users`");
        await queryRunner.query("DROP INDEX `user_logs_pkey` ON `user_logs`");
        await queryRunner.query("DROP TABLE `user_logs`");
        await queryRunner.query("DROP INDEX `url_metadata_pkey` ON `url_metadata`");
        await queryRunner.query("DROP TABLE `url_metadata`");
        await queryRunner.query("DROP INDEX `uploads_pkey` ON `uploads`");
        await queryRunner.query("DROP TABLE `uploads`");
        await queryRunner.query("DROP INDEX `unfollows_pkey` ON `unfollows`");
        await queryRunner.query("DROP TABLE `unfollows`");
        await queryRunner.query("DROP INDEX `index_transactions_on_from` ON `transactions`");
        await queryRunner.query("DROP INDEX `transactions_pkey` ON `transactions`");
        await queryRunner.query("DROP INDEX `index_transactions_on_to` ON `transactions`");
        await queryRunner.query("DROP INDEX `index_transactions_on_tx_hash` ON `transactions`");
        await queryRunner.query("DROP TABLE `transactions`");
        await queryRunner.query("DROP INDEX `transaction_outputs_pkey` ON `transaction_outputs`");
        await queryRunner.query("DROP INDEX `index_transaction_outputs_on_transaction_id` ON `transaction_outputs`");
        await queryRunner.query("DROP TABLE `transaction_outputs`");
        await queryRunner.query("DROP INDEX `transaction_inputs_pkey` ON `transaction_inputs`");
        await queryRunner.query("DROP TABLE `transaction_inputs`");
        await queryRunner.query("DROP INDEX `token_credits_pkey` ON `token_credits`");
        await queryRunner.query("DROP TABLE `token_credits`");
        await queryRunner.query("DROP INDEX `tiers_pkey` ON `tiers`");
        await queryRunner.query("DROP TABLE `tiers`");
        await queryRunner.query("DROP INDEX `supports_pkey` ON `supports`");
        await queryRunner.query("DROP TABLE `supports`");
        await queryRunner.query("DROP INDEX `support_payments_pkey` ON `support_payments`");
        await queryRunner.query("DROP TABLE `support_payments`");
        await queryRunner.query("DROP INDEX `index_subscriptions_on_creator_id` ON `subscriptions`");
        await queryRunner.query("DROP INDEX `subscriptions_pkey` ON `subscriptions`");
        await queryRunner.query("DROP INDEX `index_subscriptions_on_user_id` ON `subscriptions`");
        await queryRunner.query("DROP TABLE `subscriptions`");
        await queryRunner.query("DROP INDEX `subscription_requests_pkey` ON `subscription_requests`");
        await queryRunner.query("DROP TABLE `subscription_requests`");
        await queryRunner.query("DROP INDEX `shipping_rates_pkey` ON `shipping_rates`");
        await queryRunner.query("DROP TABLE `shipping_rates`");
        await queryRunner.query("DROP INDEX `sender_keys_pkey` ON `sender_keys`");
        await queryRunner.query("DROP TABLE `sender_keys`");
        await queryRunner.query("DROP INDEX `schema_migrations_pkey` ON `schema_migrations`");
        await queryRunner.query("DROP TABLE `schema_migrations`");
        await queryRunner.query("DROP INDEX `rulings_pkey` ON `rulings`");
        await queryRunner.query("DROP TABLE `rulings`");
        await queryRunner.query("DROP INDEX `reposts_pkey` ON `reposts`");
        await queryRunner.query("DROP INDEX `index_reposts_on_user_id` ON `reposts`");
        await queryRunner.query("DROP TABLE `reposts`");
        await queryRunner.query("DROP INDEX `reports_pkey` ON `reports`");
        await queryRunner.query("DROP TABLE `reports`");
        await queryRunner.query("DROP INDEX `purchases_pkey` ON `purchases`");
        await queryRunner.query("DROP TABLE `purchases`");
        await queryRunner.query("DROP INDEX `purchase_order_supports_pkey` ON `purchase_order_supports`");
        await queryRunner.query("DROP TABLE `purchase_order_supports`");
        await queryRunner.query("DROP INDEX `purchase_orders_pkey` ON `purchase_orders`");
        await queryRunner.query("DROP TABLE `purchase_orders`");
        await queryRunner.query("DROP INDEX `product_uploads_pkey` ON `product_uploads`");
        await queryRunner.query("DROP TABLE `product_uploads`");
        await queryRunner.query("DROP INDEX `products_pkey` ON `products`");
        await queryRunner.query("DROP TABLE `products`");
        await queryRunner.query("DROP INDEX `product_inventories_pkey` ON `product_inventories`");
        await queryRunner.query("DROP TABLE `product_inventories`");
        await queryRunner.query("DROP INDEX `post_uploads_pkey` ON `post_uploads`");
        await queryRunner.query("DROP TABLE `post_uploads`");
        await queryRunner.query("DROP INDEX `index_posts_on_created_at` ON `posts`");
        await queryRunner.query("DROP INDEX `index_posts_on_dead` ON `posts`");
        await queryRunner.query("DROP INDEX `index_posts_on_featured_in_frontpage` ON `posts`");
        await queryRunner.query("DROP INDEX `posts_pkey` ON `posts`");
        await queryRunner.query("DROP INDEX `index_posts_on_post_id` ON `posts`");
        await queryRunner.query("DROP INDEX `index_posts_on_repost_id` ON `posts`");
        await queryRunner.query("DROP INDEX `index_posts_on_user_id` ON `posts`");
        await queryRunner.query("DROP INDEX `index_posts_on_uuid` ON `posts`");
        await queryRunner.query("DROP TABLE `posts`");
        await queryRunner.query("DROP INDEX `post_boosts_pkey` ON `post_boosts`");
        await queryRunner.query("DROP TABLE `post_boosts`");
        await queryRunner.query("DROP INDEX `payments_pkey` ON `payments`");
        await queryRunner.query("DROP TABLE `payments`");
        await queryRunner.query("DROP INDEX `payment_addresses_pkey` ON `payment_addresses`");
        await queryRunner.query("DROP TABLE `payment_addresses`");
        await queryRunner.query("DROP INDEX `old_sender_keys_pkey` ON `old_sender_keys`");
        await queryRunner.query("DROP TABLE `old_sender_keys`");
        await queryRunner.query("DROP INDEX `notifications_pkey` ON `notifications`");
        await queryRunner.query("DROP INDEX `index_notifications_on_user_id` ON `notifications`");
        await queryRunner.query("DROP TABLE `notifications`");
        await queryRunner.query("DROP INDEX `metrics_pkey` ON `metrics`");
        await queryRunner.query("DROP TABLE `metrics`");
        await queryRunner.query("DROP INDEX `message_uploads_pkey` ON `message_uploads`");
        await queryRunner.query("DROP TABLE `message_uploads`");
        await queryRunner.query("DROP INDEX `media_thumbnails_pkey` ON `media_thumbnails`");
        await queryRunner.query("DROP TABLE `media_thumbnails`");
        await queryRunner.query("DROP INDEX `livestream_viewers_pkey` ON `livestream_viewers`");
        await queryRunner.query("DROP TABLE `livestream_viewers`");
        await queryRunner.query("DROP INDEX `livestreams_pkey` ON `livestreams`");
        await queryRunner.query("DROP TABLE `livestreams`");
        await queryRunner.query("DROP INDEX `list_subscriptions_pkey` ON `list_subscriptions`");
        await queryRunner.query("DROP TABLE `list_subscriptions`");
        await queryRunner.query("DROP INDEX `lists_pkey` ON `lists`");
        await queryRunner.query("DROP TABLE `lists`");
        await queryRunner.query("DROP INDEX `list_memberships_pkey` ON `list_memberships`");
        await queryRunner.query("DROP TABLE `list_memberships`");
        await queryRunner.query("DROP INDEX `list_blocks_pkey` ON `list_blocks`");
        await queryRunner.query("DROP TABLE `list_blocks`");
        await queryRunner.query("DROP INDEX `likes_pkey` ON `likes`");
        await queryRunner.query("DROP INDEX `index_likes_on_post_id` ON `likes`");
        await queryRunner.query("DROP TABLE `likes`");
        await queryRunner.query("DROP INDEX `irrelevant_words_pkey` ON `irrelevant_words`");
        await queryRunner.query("DROP TABLE `irrelevant_words`");
        await queryRunner.query("DROP INDEX `invoices_pkey` ON `invoices`");
        await queryRunner.query("DROP TABLE `invoices`");
        await queryRunner.query("DROP INDEX `invites_pkey` ON `invites`");
        await queryRunner.query("DROP TABLE `invites`");
        await queryRunner.query("DROP INDEX `hidden_hashtags_pkey` ON `hidden_hashtags`");
        await queryRunner.query("DROP TABLE `hidden_hashtags`");
        await queryRunner.query("DROP INDEX `filters_pkey` ON `filters`");
        await queryRunner.query("DROP TABLE `filters`");
        await queryRunner.query("DROP INDEX `files_pkey` ON `files`");
        await queryRunner.query("DROP TABLE `files`");
        await queryRunner.query("DROP INDEX `index_messages_on_read_and_conversation_id` ON `messages`");
        await queryRunner.query("DROP INDEX `index_messages_on_conversation_id` ON `messages`");
        await queryRunner.query("DROP INDEX `messages_pkey` ON `messages`");
        await queryRunner.query("DROP INDEX `index_messages_on_read` ON `messages`");
        await queryRunner.query("DROP TABLE `messages`");
        await queryRunner.query("DROP INDEX `facebook_imports_pkey` ON `facebook_imports`");
        await queryRunner.query("DROP TABLE `facebook_imports`");
        await queryRunner.query("DROP INDEX `events_pkey` ON `events`");
        await queryRunner.query("DROP TABLE `events`");
        await queryRunner.query("DROP INDEX `delivery_addresses_pkey` ON `delivery_addresses`");
        await queryRunner.query("DROP TABLE `delivery_addresses`");
        await queryRunner.query("DROP INDEX `deleted_user_backups_pkey` ON `deleted_user_backups`");
        await queryRunner.query("DROP TABLE `deleted_user_backups`");
        await queryRunner.query("DROP INDEX `conversation_users_pkey` ON `conversation_users`");
        await queryRunner.query("DROP INDEX `index_conversation_users_on_user_id` ON `conversation_users`");
        await queryRunner.query("DROP TABLE `conversation_users`");
        await queryRunner.query("DROP INDEX `conversations_pkey` ON `conversations`");
        await queryRunner.query("DROP INDEX `index_conversations_on_uuid` ON `conversations`");
        await queryRunner.query("DROP TABLE `conversations`");
        await queryRunner.query("DROP INDEX `contacts_pkey` ON `contacts`");
        await queryRunner.query("DROP TABLE `contacts`");
        await queryRunner.query("DROP INDEX `comments_pkey` ON `comments`");
        await queryRunner.query("DROP TABLE `comments`");
        await queryRunner.query("DROP INDEX `channels_pkey` ON `channels`");
        await queryRunner.query("DROP TABLE `channels`");
        await queryRunner.query("DROP INDEX `boards_pkey` ON `boards`");
        await queryRunner.query("DROP TABLE `boards`");
        await queryRunner.query("DROP INDEX `index_blocks_on_user_id_and_blocked_id` ON `blocks`");
        await queryRunner.query("DROP INDEX `blocks_pkey` ON `blocks`");
        await queryRunner.query("DROP TABLE `blocks`");
        await queryRunner.query("DROP INDEX `bitcoin_wallets_pkey` ON `bitcoin_wallets`");
        await queryRunner.query("DROP TABLE `bitcoin_wallets`");
        await queryRunner.query("DROP INDEX `bitcoin_purchases_pkey` ON `bitcoin_purchases`");
        await queryRunner.query("DROP TABLE `bitcoin_purchases`");
        await queryRunner.query("DROP INDEX `bitcoin_addresses_pkey` ON `bitcoin_addresses`");
        await queryRunner.query("DROP TABLE `bitcoin_addresses`");
        await queryRunner.query("DROP INDEX `bitcoin_address_backups_pkey` ON `bitcoin_address_backups`");
        await queryRunner.query("DROP TABLE `bitcoin_address_backups`");
        await queryRunner.query("DROP INDEX `average_transaction_fees_pkey` ON `average_transaction_fees`");
        await queryRunner.query("DROP TABLE `average_transaction_fees`");
        await queryRunner.query("DROP INDEX `authenticated_accounts_pkey` ON `authenticated_accounts`");
        await queryRunner.query("DROP TABLE `authenticated_accounts`");
        await queryRunner.query("DROP INDEX `ar_internal_metadata_pkey` ON `ar_internal_metadata`");
        await queryRunner.query("DROP TABLE `ar_internal_metadata`");
        await queryRunner.query("DROP INDEX `ads_pkey` ON `ads`");
        await queryRunner.query("DROP TABLE `ads`");
        await queryRunner.query("DROP INDEX `ad_placements_pkey` ON `ad_placements`");
        await queryRunner.query("DROP TABLE `ad_placements`");
        await queryRunner.query("DROP INDEX `admin_alerts_pkey` ON `admin_alerts`");
        await queryRunner.query("DROP TABLE `admin_alerts`");
        await queryRunner.query("DROP INDEX `ad_impressions_pkey` ON `ad_impressions`");
        await queryRunner.query("DROP TABLE `ad_impressions`");
        await queryRunner.query("DROP INDEX `adds_pkey` ON `adds`");
        await queryRunner.query("DROP TABLE `adds`");
        await queryRunner.query("DROP INDEX `ad_credits_pkey` ON `ad_credits`");
        await queryRunner.query("DROP TABLE `ad_credits`");
        await queryRunner.query("DROP INDEX `ad_clicks_pkey` ON `ad_clicks`");
        await queryRunner.query("DROP TABLE `ad_clicks`");
        await queryRunner.query("DROP INDEX `ad_campaigns_pkey` ON `ad_campaigns`");
        await queryRunner.query("DROP TABLE `ad_campaigns`");
    }

}
